<classMaker classVarName="fragment" modifier="abstract">
    <extends classVarName="baseFragment" />
    <implements classVarName="presenterGetInterface" />

    <note>${note}</note>

    <property classVarName="presenter" valueName="presenter">
        <anno classVarName="inject" />
    </property>
    <property classVarName="presenter" modifier="public" valueName="presenter1"></property>
    <property classVarName="presenter" modifier="protected" valueName="presenter2"></property>

    <property classVarName="presenter" modifier="private" valueName="presenter3"></property>
    <property classVarName="presenter" modifier="private#volatile" valueName="presenter4">
        <note>
            sadfsdfs\ndafasdfasdfdafd\nadsfasdf
        </note>
    </property>
    <property classVarName="string" modifier="public#static#final" valueName="CONSTANT">
        <body>
            "constan_value"
        </body>
    </property>

    <property classVarName="atomicInteger" modifier="private" valueName="atomicInteger">
        <body>
            new AtomicInteger(1)
        </body>

    </property>

    <method methodName="onCreateView" modifier="public" returnClassName="void">
        <anno classVarName="override" />

        <methodParam classVarName="bundle" valueName="savedInstanceState" />

        <include classVarName="R" />
        <body>
            setContentView(R.layout.${_-name}_fragment);\n
            super.onCreate(savedInstanceState);\n

        </body>
    </method>

    <method methodName="inject" modifier="public" returnClassName="void">
        <anno classVarName="override" />

        <methodParam classVarName="appComponent" valueName="appComponent" />

        <include classVarName="dagger" />
        <include classVarName="module" />
        <include classVarName="component" />
        <body>
            ${name}Component homeComponent = Dagger${name}Component.builder()\n
            .appComponent(appComponent)\n
            .${&lt;name}Module(new ${name}Module(this))\n
            .build();\n
            homeComponent.inject${type}(this);\n
            homeComponent.injectPresenter(presenter);
        </body>
    </method>
    <method methodName="createIntent" modifier="private#static" returnClassName="intent">

        <methodParam classVarName="context" valueName="context" />
        <body>
            return new Intent(context, ${name}Activity.class);
        </body>
    </method>
    <method methodName="createIntent1" modifier="static" returnClassName="intent">

        <methodParam classVarName="context" valueName="context" />
        <body>
            return new Intent(context, ${name}Activity.class);
        </body>
    </method>
    <method methodName="createIntent2" modifier="abstract" returnClassName="intent"></method>

    <method methodName="createIntent3" modifier="private#static#final#synchronized"
        returnClassName="intent">
        <methodParam classVarName="context" valueName="context" />
        <body>
            return new Intent(context, ${name}Activity.class);
        </body>
    </method>

    <method methodName="initView" modifier="private" returnClassName="void"></method>

    <method methodName="initData" modifier="private" returnClassName="void">
        <note>
            sadfsdfsdafasdfasdfdafd\nadsfasdf
        </note>
        <body></body>
    </method>

    <classMaker classVarName="fragment" isInner="true" modifier="private#static">
        <extends classVarName="baseFragment" />
        <implements classVarName="presenterGetInterface" />
        <note>innerClasss\nadsfasdf</note>

        <property classVarName="presenter" valueName="presenter">
            <anno classVarName="inject" />
        </property>
        <property classVarName="presenter" modifier="public" valueName="presenter1"></property>
        <property classVarName="presenter" modifier="protected" valueName="presenter2"></property>

        <property classVarName="presenter" modifier="private" valueName="presenter3"></property>
        <property classVarName="presenter" modifier="private#volatile" valueName="presenter4">
            <note>
                sadfsdfs\ndafasdfasdfdafd\nadsfasdf
            </note>
        </property>
        <property classVarName="string" modifier="public#static#final" valueName="CONSTANT">
            <body>
                "constan_value"
            </body>
        </property>

        <property classVarName="atomicInteger" modifier="private" valueName="atomicInteger">
            <body>
                new AtomicInteger(1)
            </body>

        </property>

        <method methodName="onCreateView" modifier="public" returnClassName="void">
            <anno classVarName="override" />

            <methodParam classVarName="bundle" valueName="savedInstanceState" />

            <include classVarName="R" />
            <body>
                setContentView(R.layout.${_-name}_fragment);\n
                super.onCreate(savedInstanceState);\n

            </body>
        </method>

        <method methodName="inject" modifier="public" returnClassName="void">
            <anno classVarName="override" />

            <methodParam classVarName="appComponent" valueName="appComponent" />

            <include classVarName="dagger" />
            <include classVarName="module" />
            <include classVarName="component" />
            <body>
                ${name}Component homeComponent = Dagger${name}Component.builder()\n
                .appComponent(appComponent)\n
                .${&lt;name}Module(new ${name}Module(this))\n
                .build();\n
                homeComponent.inject${type}(this);\n
                homeComponent.injectPresenter(presenter);
            </body>
        </method>
        <method methodName="createIntent" modifier="private#static" returnClassName="intent">

            <methodParam classVarName="context" valueName="context" />
            <body>
                return new Intent(context, ${name}Activity.class);
            </body>
        </method>
        <method methodName="createIntent1" modifier="static" returnClassName="intent">

            <methodParam classVarName="context" valueName="context" />
            <body>
                return new Intent(context, ${name}Activity.class);
            </body>
        </method>
        <method methodName="createIntent2" modifier="abstract" returnClassName="intent"></method>

        <method methodName="createIntent3" modifier="private#static#final#synchronized"
            returnClassName="intent">
            <methodParam classVarName="context" valueName="context" />
            <body>
                return new Intent(context, ${name}Activity.class);
            </body>
        </method>

        <method methodName="initView" modifier="private" returnClassName="void"></method>

        <method methodName="initData" modifier="private" returnClassName="void">
            <note>
                sadfsdfsdafasdfasdfdafd\nadsfasdf
            </note>
            <body></body>
        </method>
    </classMaker>
</classMaker>